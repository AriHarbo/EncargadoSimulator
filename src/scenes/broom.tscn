[gd_scene load_steps=10 format=3 uid="uid://dip35k3r165k6"]

[ext_resource type="Script" uid="uid://cctroaqv1k7gh" path="res://src/scripts/broom.gd" id="1_kcay2"]

[sub_resource type="BoxMesh" id="BoxMesh_m7gpi"]

[sub_resource type="Shader" id="Shader_kcay2"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.4.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_burley, specular_schlick_ggx;

uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color, filter_linear_mipmap, repeat_enable;
uniform ivec2 albedo_texture_size;
uniform float point_size : hint_range(0.1, 128.0, 0.1);

uniform float roughness : hint_range(0.0, 1.0);
uniform sampler2D texture_metallic : hint_default_white, filter_linear_mipmap, repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r, filter_linear_mipmap, repeat_enable;

uniform float specular : hint_range(0.0, 1.0, 0.01);
uniform float metallic : hint_range(0.0, 1.0, 0.01);

uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

void vertex() {
	UV = UV * uv1_scale.xy + uv1_offset.xy;
}

void fragment() {
	vec2 base_uv = UV;

	vec4 albedo_tex = texture(texture_albedo, base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;

	float metallic_tex = dot(texture(texture_metallic, base_uv), metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	SPECULAR = specular;

	vec4 roughness_texture_channel = vec4(1.0, 0.0, 0.0, 0.0);
	float roughness_tex = dot(texture(texture_roughness, base_uv), roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_m2pbu"]
render_priority = 0
shader = SubResource("Shader_kcay2")
shader_parameter/albedo = Color(0.319412, 0.23313, 0.0262999, 1)
shader_parameter/albedo_texture_size = Vector2i(0, 0)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = Vector4(1, 0, 0, 0)
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)

[sub_resource type="BoxShape3D" id="BoxShape3D_sgaj5"]
size = Vector3(0.0822144, 1.97264, 0.0669403)

[sub_resource type="BoxShape3D" id="BoxShape3D_ca0re"]
size = Vector3(0.0802002, 1.64856, 0.059082)

[sub_resource type="Animation" id="Animation_kcay2"]
resource_name = "cleaning_animation"
tracks/0/type = "rotation_3d"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = PackedFloat32Array(0, 1, 0, 0, 0, 1, 0.333333, 1, 0, 0, 0.290176, 0.956973, 0.666667, 1, 0, 0, -0.284392, 0.958708, 1, 1, 0, 0, 0, 1)

[sub_resource type="Animation" id="Animation_m2pbu"]
length = 0.001
tracks/0/type = "rotation_3d"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = PackedFloat32Array(0, 1, 0, 0, 0, 1)

[sub_resource type="AnimationLibrary" id="AnimationLibrary_sgaj5"]
_data = {
&"RESET": SubResource("Animation_m2pbu"),
&"cleaning_animation": SubResource("Animation_kcay2")
}

[node name="Broom" type="RigidBody3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0)
script = ExtResource("1_kcay2")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(0.0719863, 0, 0, 0, 1.97004, 0, 0, 0, 0.063952, -0.0348196, 0.167754, 0)
mesh = SubResource("BoxMesh_m7gpi")
surface_material_override/0 = SubResource("ShaderMaterial_m2pbu")

[node name="Area3D" type="Area3D" parent="."]

[node name="CollisionShape3D" type="CollisionShape3D" parent="Area3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.0370789, 0.171237, -0.000984192)
shape = SubResource("BoxShape3D_sgaj5")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 0.999788, -0.0206109, 0, 0.0206109, 0.999788, -0.0247192, 0.32428, 0.00805664)
shape = SubResource("BoxShape3D_ca0re")

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
&"": SubResource("AnimationLibrary_sgaj5")
}
